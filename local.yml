---
- name: Install arch linux workstation apps
  hosts: localhost
  become: true
  vars:
   - archlinux_user_id: 'barko187'
  tasks:
  #- name: create normal user
  #user:
  #name: "{{ archlinux_user_id }}"
  #create_home: true
  #group: users
  #groups:
  #- wheel
  #- docker
  #become: true
  #tags: user
  #- import_role:
      # name: ansible-role-asdf
      # vars:
        # asdf_plugins:
        # - name: "java"
          # versions: ["oracle-8.131","openjdk-11.0.1"]
          # global: "oracle-8.131"
  - name: update pacman cache
    pacman: update_cache=true
    become: true

  - name: install pacman tools
    pacman:
      name: pacman-contrib
    become: true

  - name: install reflector
    pacman:
      name: reflector
    become: true

  - name: check if mirrorlist was recently updated
    find:
     paths:
       - /etc/pacman.d/mirrorlist
     age: 1d
    register: mirrorlist_age

  - name: update pacman mirrorlist
    command: >-
     /usr/bin/reflector
     --country "United States"
     -l 200
     -p http
     --sort rate
     --save /etc/pacman.d/mirrorlist
    become: true
    when: mirrorlist_age.matched|int > 0

  - name: perform full upgrade
    pacman:
      upgrade: true
      update_cache: true
    become: true
  - name: install utilities
    pacman:
      name:
        - alsa-utils
        - aria2
        - curl
        - htop
        - httpie
        - iotop
        - jq
        - nftables
        - nmap
        - ntp
        - openssh
        - openvpn
        - ripgrep
        - rsync
        - shellcheck
        - wpa_supplicant
    become: true

  - name: enable network time
    service:
      name: ntpd
      state: started
      enabled: true
    become: true
  - name: install applications
    pacman:
      name:
        - chromium
        - evince
        - firefox
        - mpv
        - pcmanfm
        - viewnior
        - xterm
    become: true
  - name: install C/C++ development tools
    pacman:
      name:
        - base-devel
        - cmake
        - premake
        - gdb
        - valgrind
    become: true
  - name: Create aur_builder user
    user:
      name: aur_builder
      group: wheel
  - name: add aur_builder to passwordless sudoers
    lineinfile:
      path: /etc/sudoers.d/11-install-aur_builder
      line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
      create: yes
      validate: 'visudo -cf %s'
  - name: install snapd from aur
    aur:
      name: snapd
    become: yes
    become_user: aur_builder
  - name: Install htop
    pacman:
      name: htop
      state: present
    tags: base
  - name: Make sure snap is enabled and not masked
    systemd:
      name: snapd.socket
      enabled: yes
      masked: no
    tags: snap
  - name: Make sure a service is running
    systemd:
      state: started
      name: snapd.socket
    tags: snap
  - name: Create symlink snapd service
    file:
      src: /var/lib/snapd/snap
      dest: /snap
      state: link
    tags: snap
  - name: Execute task with extended PATH
    lineinfile:
      path: /etc/profile
      line: "export PATH=$PATH:/snap/bin/"
      state: present
    tags: snap
  - name: source /etc/profile
    shell: source /etc/profile
    tags: snap
  - name: Install neovim
    pacman:
      name: neovim
      state: present
    tags: vim
  - name: Install python-neovim
    pacman:
      name: python-neovim
      state: present
    tags: vim
  - name: Create directory for minpac neovim
    file:
      path: /home/{{ ansible_user_id }}/.config/nvim/pack/minpac/opt
      state: directory
    tags: vim
  - name: Checkout minpac repo
    git:
      repo: 'https://github.com/k-takata/minpac.git'
      dest: /home/{{ ansible_user_id }}/.config/nvim/pack/minpac/opt/minpac
      version: master
    tags: vim
  - name: configure init.vim
    copy:
      src: init.vim
      dest: /home/{{ archlinux_user_id }}/.config/nvim/init.vim
      owner: "{{ archlinux_user_id }}"
      group: users
    become: true
    become_user: "{{ archlinux_user_id }}"
    tags: vim
  - name: configure i3
    copy:
      src: config
      dest: /home/{{ archlinux_user_id }}/.config/i3/config
      backup: yes
      owner: "{{ archlinux_user_id }}"
      group: users
    become: true
    become_user: "{{ archlinux_user_id }}"
    tags: i3
  - name: configure i3blocks
    copy:
      src: config.toml
      dest: /home/{{ archlinux_user_id }}/.config/i3/config.toml
      owner: "{{ archlinux_user_id }}"
      group: users
    become: true
    become_user: "{{ archlinux_user_id }}"
    tags: i3
  - name: Install fish
    pacman:
      name: fish
      state: present
    tags: cli
  - name: Install tmux
    pacman:
      name: tmux
      state: present
    tags: cli

  - name: Install KeePass pw mgr
    pacman:
      name:
        - keepass
        - xdotool
        - xsel
      state: present
    tags: security

  # - name: Install Chromium web browser with --channel=latest/edge
  #   snap:
  #     name: chromium
  #     channel: latest/edge
  #     classic: yes
  #   tags: webbrowsers

  # - name: Install vs code with --channel=latest/edge
  #   snap:
  #     name: code
  #     channel: latest/stable
  #     classic: yes
  #   tags: vscode

  - name: Install qutebrowser
    pacman:
      name: qutebrowser
      state: present
    tags: webbrowsers

  - name: Install PCmanFM
    pacman:
      name: pcmanfm
      state: present
    tags: filemanagers
  - name: Install weechat
    pacman:
      name: weechat
      state: present
    tags: chat
  - name: Install VirtualBox
    pacman:
      name:
        - vagrant
        - virtualbox
          # - virtualbox-host-modules-arch
      state: present
    tags: virtualbox
  #- name: Install virtualbox-host-modules-arch
    # pacman:
      #  name: virtualbox-host-modules-arch
      # state: present
    # tags: virtualbox
    # - name: Install linux headers
    #pacman:
    # name: linux-headers
    #  state: present
    # tags: virtualbox
  - name: install Docker
    pacman:
      name: docker
    become: true
    tags: docker
  #- name: configure Docker user namespace remap range
    # copy:
      # dest: /etc/subuid
      # content: |
        # default:165536:4096
      # mode: 0644
    # become: true

  #- name: configure Docker group namespace remap range
    # copy:
      # dest: /etc/subgid
      # content: |
        # default:165536:4096
      # mode: 0644
    # become: true

  #- name: create /etc/docker directory
    # file:
      # path: /etc/docker
      # state: directory
      # owner: root
      # group: root
      # mode: 0755
    # become: true

  #- name: configure Docker daemon
    # copy:
      # src: daemon.json
      # dest: /etc/docker/daemon.json
      # mode: 0644
    # become: true

  #- name: start Docker daemon
    # systemd:
      # name: docker.service
      # state: started
      # enabled: true
    # become: true
  - name: Install smplayer
    pacman:
      name: smplayer
      state: present
    tags: smplayer
  - name: Install smplayer-themes
    pacman:
      name: smplayer-themes
      state: present
    tags: smplayer
  - name: Install smtube
    pacman:
      name: smtube
      state: present
    tags: smplayer
  - name: Install smplayer-skins
    pacman:
      name: smplayer-skins
      state: present
    tags: smplayer
  #- name: install ruby
    # pacman:
      # name:
        #- ruby
        #- ruby-irb
    # become: true
    # tags: ruby
  - name: install python development tools
    pacman:
      name:
        - python
        - python-pip
    become: true
    tags: python
  - name: install flake8 for python 3
    pip:
      name: flake8
      state: present
    become: true
    tags: python
  #- name: install java development tools
    # pacman:
      # name:
        # - jdk-openjdk
        # - openjdk-doc
        # - openjdk-src
        # - maven
        # become: true












